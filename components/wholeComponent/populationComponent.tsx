import { cn } from "@/lib/utils";
import PopulationCard from "../ui/populationCard";

type populationCardIcon = {
  name: string;
  icon: React.FC<{ className?: string }>;
  number: string;
};

const PopulationComponent = ({ className }: { className?: string }) => {
    const totalMenuSvg: React.FC<{ className?: string }> = ({ className }) => {
        return (
        <svg
            className={className}
            width="18"
            height="20"
            viewBox="0 0 18 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
            opacity="0.4"
            d="M15.8088 7.021C15.3573 7.021 14.7592 7.011 14.0146 7.011C12.1987 7.011 10.7055 5.508 10.7055 3.675V0.459C10.7055 0.206 10.5036 0 10.253 0H4.96363C2.49517 0 0.5 2.026 0.5 4.509V15.284C0.5 17.889 2.59022 20 5.16958 20H13.0463C15.5058 20 17.5 17.987 17.5 15.502V7.471C17.5 7.217 17.299 7.012 17.0475 7.013C16.6247 7.016 16.1177 7.021 15.8088 7.021Z"
            fill="#130F26"
            />
            <path
            opacity="0.4"
            d="M13.084 0.5673C12.785 0.2563 12.263 0.4703 12.263 0.9013V3.5383C12.263 4.6443 13.174 5.5543 14.28 5.5543C14.977 5.5623 15.945 5.5643 16.767 5.5623C17.188 5.5613 17.402 5.0583 17.11 4.7543C16.055 3.6573 14.166 1.6913 13.084 0.5673Z"
            fill="#130F26"
            />
            <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M5.9739 9.3876H9.3589C9.7699 9.3876 10.1039 9.0546 10.1039 8.6436C10.1039 8.2326 9.7699 7.8986 9.3589 7.8986H5.9739C5.5629 7.8986 5.2299 8.2326 5.2299 8.6436C5.2299 9.0546 5.5629 9.3876 5.9739 9.3876ZM5.974 14.3818H11.418C11.829 14.3818 12.163 14.0488 12.163 13.6378C12.163 13.2268 11.829 12.8928 11.418 12.8928H5.974C5.563 12.8928 5.23 13.2268 5.23 13.6378C5.23 14.0488 5.563 14.3818 5.974 14.3818Z"
            fill="#130F26"
            />
        </svg>
        );
    };

    const totalRevenuSvg: React.FC<{ className?: string }> = ({ className }) => {
        return (
        <svg
            className={className}
            width="18"
            height="18"
            viewBox="0 0 18 18"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M13.2428 0.737561C13.2428 2.95855 15.0459 4.75902 17.2702 4.75902C17.5151 4.75782 17.7594 4.73431 18 4.68878V12.6615C18 16.0156 16.0215 18 12.6624 18H5.34636C1.97851 18 0 16.0156 0 12.6615V5.3561C0 2.00195 1.97851 0 5.34636 0H13.3131C13.2659 0.243004 13.2423 0.490014 13.2428 0.737561ZM11.15 10.8966L14.0078 7.20878V7.19122C14.2525 6.86247 14.1901 6.39889 13.8671 6.14634C13.7108 6.02568 13.5122 5.97345 13.3167 6.00159C13.1211 6.02972 12.9453 6.1358 12.8295 6.29561L10.4201 9.39512L7.6766 7.23512C7.51997 7.11309 7.32071 7.05922 7.12381 7.08565C6.92691 7.11208 6.74898 7.2166 6.63019 7.37561L3.67562 11.1863C3.57177 11.3158 3.51586 11.4771 3.51734 11.6429C3.5002 11.9781 3.71187 12.2826 4.03238 12.3838C4.35288 12.485 4.70138 12.3573 4.88031 12.0732L7.35125 8.87707L10.0948 11.0283C10.2508 11.1541 10.4514 11.2111 10.6504 11.1863C10.8494 11.1615 11.0297 11.0569 11.15 10.8966Z"
            fill="#130F26"
            />
        </svg>
        );
    };

    const totalCustomersSvg: React.FC<{ className?: string }> = ({
        className,
    }) => {
        return (
        <svg
            className={className}
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <g id="Iconly/Bulk/3 User">
            <g id="3 User">
                <path
                id="Fill 1"
                d="M11.949 14.5399C8.49903 14.5399 5.58807 15.1037 5.58807 17.2794C5.58807 19.4561 8.51783 20 11.949 20C15.399 20 18.31 19.4363 18.31 17.2605C18.31 15.0839 15.3802 14.5399 11.949 14.5399Z"
                fill="#130F26"
                />
                <path
                id="Fill 3"
                opacity="0.4"
                d="M11.949 12.467C14.2851 12.467 16.1583 10.5831 16.1583 8.23351C16.1583 5.88306 14.2851 4 11.949 4C9.61293 4 7.73975 5.88306 7.73975 8.23351C7.73975 10.5831 9.61293 12.467 11.949 12.467Z"
                fill="#130F26"
                />
                <path
                id="Fill 6"
                opacity="0.4"
                d="M21.0879 9.21926C21.6923 6.84179 19.9203 4.70658 17.6639 4.70658C17.4186 4.70658 17.184 4.73359 16.9548 4.77952C16.9243 4.78673 16.8903 4.80204 16.8724 4.82905C16.8518 4.86327 16.867 4.9092 16.8894 4.93892C17.5672 5.89531 17.9567 7.05973 17.9567 8.3097C17.9567 9.50744 17.5995 10.6241 16.9727 11.5508C16.9082 11.6463 16.9655 11.775 17.0792 11.7949C17.2368 11.8228 17.398 11.8372 17.5627 11.8417C19.2058 11.8849 20.6805 10.8214 21.0879 9.21926Z"
                fill="#130F26"
                />
                <path
                id="Fill 8"
                d="M22.8093 14.8169C22.5084 14.1721 21.7823 13.73 20.6782 13.5129C20.1571 13.3851 18.7468 13.2049 17.4351 13.2293C17.4154 13.232 17.4046 13.2455 17.4028 13.2545C17.4002 13.2671 17.4055 13.2887 17.4315 13.3022C18.0377 13.6039 20.381 14.916 20.0864 17.6834C20.0738 17.8032 20.1696 17.9067 20.2887 17.8887C20.8654 17.8059 22.349 17.4853 22.8093 16.4866C23.0636 15.9588 23.0636 15.3456 22.8093 14.8169Z"
                fill="#130F26"
                />
                <path
                id="Fill 11"
                opacity="0.4"
                d="M7.04483 4.77979C6.8165 4.73296 6.58101 4.70685 6.33567 4.70685C4.07926 4.70685 2.30726 6.84206 2.91255 9.21953C3.31906 10.8216 4.79379 11.8852 6.43685 11.842C6.60161 11.8374 6.76368 11.8221 6.92037 11.7951C7.03409 11.7753 7.09139 11.6465 7.02692 11.5511C6.40014 10.6235 6.04288 9.50771 6.04288 8.30997C6.04288 7.0591 6.43327 5.89468 7.11109 4.93919C7.13258 4.90947 7.1487 4.86354 7.12721 4.82932C7.1093 4.8014 7.07617 4.787 7.04483 4.77979Z"
                fill="#130F26"
                />
                <path
                id="Fill 13"
                d="M3.32156 13.5127C2.21752 13.7297 1.49225 14.1719 1.19139 14.8167C0.936203 15.3453 0.936203 15.9586 1.19139 16.4872C1.65163 17.485 3.13531 17.8065 3.71195 17.8885C3.83104 17.9065 3.92595 17.8038 3.91342 17.6831C3.61883 14.9166 5.9621 13.6045 6.56918 13.3028C6.59425 13.2884 6.59962 13.2677 6.59694 13.2542C6.59515 13.2452 6.5853 13.2317 6.5656 13.2299C5.25294 13.2047 3.84358 13.3848 3.32156 13.5127Z"
                fill="#130F26"
                />
            </g>
            </g>
        </svg>
        );
    };

    const totalOrdersSvg: React.FC<{ className?: string }> = ({ className }) => {
        return (
        <svg
            className={className}
            width="18"
            height="20"
            viewBox="0 0 18 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M17.9133 14.3147L17.1444 8.12007C16.676 5.90964 15.3503 5 14.0865 5H3.93171C2.65022 5 1.28034 5.84597 0.882639 8.12007L0.104905 14.3147C-0.531424 18.8629 1.81062 20 4.86853 20H13.1585C16.2075 20 18.4789 18.3535 17.9133 14.3147ZM6.097 10.1486C5.60889 10.1486 5.21321 9.74131 5.21321 9.23893C5.21321 8.73655 5.60889 8.32929 6.097 8.32929C6.5851 8.32929 6.98079 8.73655 6.98079 9.23893C6.98079 9.74131 6.5851 10.1486 6.097 10.1486ZM11.002 9.23893C11.002 9.74131 11.3977 10.1486 11.8858 10.1486C12.3739 10.1486 12.7696 9.74131 12.7696 9.23893C12.7696 8.73655 12.3739 8.32929 11.8858 8.32929C11.3977 8.32929 11.002 8.73655 11.002 9.23893Z"
            fill="#130F26"
            />
            <path
            opacity="0.4"
            d="M13.9739 4.77432C13.977 4.85189 13.9621 4.92913 13.9303 5H12.4932C12.4654 4.92794 12.4506 4.85153 12.4497 4.77432C12.4497 2.85682 10.8899 1.30238 8.96575 1.30238C7.04164 1.30238 5.48184 2.85682 5.48184 4.77432C5.49502 4.84898 5.49502 4.92535 5.48184 5H4.00989C3.9967 4.92535 3.9967 4.84898 4.00989 4.77432C4.12172 2.10591 6.32499 0 9.00494 0C11.6849 0 13.8882 2.10591 14 4.77432H13.9739Z"
            fill="#130F26"
            />
        </svg>
        );
    };

    const populationCardIcons = [
        { name: "Total Menu", icon: totalMenuSvg, number: "345" },
        { name: "Total Revenue", icon: totalRevenuSvg, number: "$37,193.00" },
        { name: "Total Customers", icon: totalCustomersSvg, number: "1349" },
        { name: "Total Oders", icon: totalOrdersSvg, number: "3500" },
    ] as populationCardIcon[];

    return (
        <div className={cn("", className)}>
        {populationCardIcons.map((item, idex) => {
            return (
            <PopulationCard
                key={item.number}
                number={item.number }
                name={item.name}
                Icon={item.icon}
            />
            );
        })}
        </div>
    );
};

export default PopulationComponent;
